<?php
require_once __DIR__ . '/includes/auth.php';
require_login();
require_once __DIR__ . '/includes/config.php';
require_once __DIR__ . '/includes/db.php';

include __DIR__ . '/includes/header.php';

$messaggio = "";
$task = [];

// Gestione inserimento/modifica task
if ($_SERVER['REQUEST_METHOD'] === 'POST') {
    try {
        $cliente_id = intval($_POST['cliente_id'] ?? 0);
        $descrizione = trim($_POST['descrizione'] ?? '');
        $scadenza = $_POST['scadenza'] ?? '';
        $ricorrenza = intval($_POST['ricorrenza'] ?? 0);
        $tipo_ricorrenza = $_POST['tipo_ricorrenza'] ?? '';
        $task_id = intval($_POST['task_id'] ?? 0);
        
        // Validazione
        if ($cliente_id <= 0) {
            throw new Exception("Seleziona un cliente");
        }
        
        if (empty($descrizione)) {
            throw new Exception("La descrizione Ã¨ obbligatoria");
        }
        
        if (empty($scadenza)) {
            throw new Exception("La data di scadenza Ã¨ obbligatoria");
        }
        
        // Converti ricorrenza in giorni
        $ricorrenza_giorni = null;
        if ($ricorrenza > 0) {
            switch ($tipo_ricorrenza) {
                case 'giorni':
                    $ricorrenza_giorni = $ricorrenza;
                    break;
                case 'settimane':
                    $ricorrenza_giorni = $ricorrenza * 7;
                    break;
                case 'mesi':
                    $ricorrenza_giorni = $ricorrenza * 30;
                    break;
                case 'anni':
                    $ricorrenza_giorni = $ricorrenza * 365;
                    break;
            }
        }
        
        if ($task_id > 0) {
            // Modifica task esistente
            $stmt = $pdo->prepare("UPDATE task SET descrizione = ?, scadenza = ?, ricorrenza = ? WHERE id = ?");
            $result = $stmt->execute([$descrizione, $scadenza, $ricorrenza_giorni, $task_id]);
            
            // Aggiorna associazione cliente
            $pdo->prepare("DELETE FROM task_clienti WHERE task_id = ?")->execute([$task_id]);
            $pdo->prepare("INSERT INTO task_clienti (task_id, cliente_id) VALUES (?, ?)")->execute([$task_id, $cliente_id]);
            
            $messaggio = $result ? "Task modificato con successo!" : "Errore nella modifica del task";
        } else {
            // Nuovo task
            $stmt = $pdo->prepare("INSERT INTO task (descrizione, scadenza, ricorrenza) VALUES (?, ?, ?)");
            $result = $stmt->execute([$descrizione, $scadenza, $ricorrenza_giorni]);
            
            if ($result) {
                $task_id = $pdo->lastInsertId();
                $stmt = $pdo->prepare("INSERT INTO task_clienti (task_id, cliente_id) VALUES (?, ?)");
                $stmt->execute([$task_id, $cliente_id]);
            }
            
            $messaggio = $result ? "Task creato con successo!" : "Errore nella creazione del task";
        }
        
    } catch (Exception $e) {
        $messaggio = "Errore: " . $e->getMessage();
    }
}

// Gestione completamento task
if (isset($_GET['completa']) && is_numeric($_GET['completa'])) {
    try {
        $task_id = intval($_GET['completa']);
        
        // Recupera i dati del task prima di eliminarlo
        $stmt = $pdo->prepare("
            SELECT t.*, tc.cliente_id, c.`Cognome/Ragione sociale`, c.Nome 
            FROM task t 
            LEFT JOIN task_clienti tc ON t.id = tc.task_id 
            LEFT JOIN clienti c ON tc.cliente_id = c.id 
            WHERE t.id = ?
        ");
        $stmt->execute([$task_id]);
        $task_data = $stmt->fetch(PDO::FETCH_ASSOC);
        
        if ($task_data) {
            $nome_cliente = trim(($task_data['Nome'] ?? '') . ' ' . ($task_data['Cognome/Ragione sociale'] ?? ''));
            
            // Invia notifica nella chat
            if (isset($_SESSION['user_id']) && isset($_SESSION['user_name'])) {
                $msg_notifica = $_SESSION['user_name'] . " ha completato il task: " . $task_data['descrizione'] . 
                               ($nome_cliente ? " (Cliente: $nome_cliente)" : "");
                $stmt_chat = $pdo->prepare("INSERT INTO chat_messaggi (utente_id, messaggio, timestamp) VALUES (?, ?, NOW())");
                $stmt_chat->execute([$_SESSION['user_id'], $msg_notifica]);
            }
            
            if ($task_data['ricorrenza'] && $task_data['ricorrenza'] > 0) {
                // Task ricorrente: calcola nuova scadenza
                $nuova_scadenza = date('Y-m-d', strtotime($task_data['scadenza'] . ' + ' . $task_data['ricorrenza'] . ' days'));
                
                // Elimina il task attuale
                $pdo->prepare("DELETE FROM task WHERE id = ?")->execute([$task_id]);
                
                // Crea nuovo task con nuova scadenza
                $stmt_nuovo = $pdo->prepare("INSERT INTO task (descrizione, scadenza, ricorrenza) VALUES (?, ?, ?)");
                $stmt_nuovo->execute([$task_data['descrizione'], $nuova_scadenza, $task_data['ricorrenza']]);
                $nuovo_task_id = $pdo->lastInsertId();
                
                // Riassocia il task al cliente
                if ($task_data['cliente_id']) {
                    $stmt_assoc = $pdo->prepare("INSERT INTO task_clienti (task_id, cliente_id) VALUES (?, ?)");
                    $stmt_assoc->execute([$nuovo_task_id, $task_data['cliente_id']]);
                }
                
                $messaggio = "Task ricorrente completato! Ãˆ stato ricreato con scadenza: " . date('d/m/Y', strtotime($nuova_scadenza));
            } else {
                // Task one-shot: elimina definitivamente
                $pdo->prepare("DELETE FROM task WHERE id = ?")->execute([$task_id]);
                $messaggio = "Task completato ed eliminato!";
            }
        } else {
            $messaggio = "Errore: Task non trovato";
        }
    } catch (Exception $e) {
        $messaggio = "Errore nel completamento: " . $e->getMessage();
    }
}

// Gestione eliminazione task
if (isset($_GET['elimina']) && is_numeric($_GET['elimina'])) {
    try {
        $task_id = intval($_GET['elimina']);
        $stmt = $pdo->prepare("DELETE FROM task WHERE id = ?");
        if ($stmt->execute([$task_id])) {
            $messaggio = "Task eliminato con successo!";
        }
    } catch (Exception $e) {
        $messaggio = "Errore nell'eliminazione: " . $e->getMessage();
    }
}

// Gestione modifica task
if (isset($_GET['modifica']) && is_numeric($_GET['modifica'])) {
    $task_id = intval($_GET['modifica']);
    $stmt = $pdo->prepare("SELECT t.*, tc.cliente_id FROM task t LEFT JOIN task_clienti tc ON t.id = tc.task_id WHERE t.id = ?");
    $stmt->execute([$task_id]);
    $task = $stmt->fetch(PDO::FETCH_ASSOC);
}

// Carica lista clienti
$clienti = $pdo->query("SELECT id, `Cognome/Ragione sociale`, Nome, `Codice fiscale` FROM clienti ORDER BY `Cognome/Ragione sociale`, Nome")->fetchAll();

// Carica lista task con clienti associati
$sql = "SELECT t.*, 
        tc.cliente_id,
        CONCAT(c.`Cognome/Ragione sociale`, ' ', COALESCE(c.Nome, '')) as nome_cliente,
        c.`Codice fiscale` as codice_fiscale
        FROM task t 
        LEFT JOIN task_clienti tc ON t.id = tc.task_id 
        LEFT JOIN clienti c ON tc.cliente_id = c.id
        WHERE tc.cliente_id IS NOT NULL
        ORDER BY t.scadenza ASC";

$tasks = $pdo->query($sql)->fetchAll();
?>

<style>
.task-header {
    background: linear-gradient(135deg, #6f42c1 0%, #e83e8c 100%);
    color: white;
    padding: 2rem;
    border-radius: 15px;
    margin-bottom: 2rem;
    box-shadow: 0 8px 32px rgba(0,0,0,0.1);
}

.task-header h2 {
    margin: 0;
    font-size: 2.5rem;
    font-weight: 300;
}

.main-container {
    display: grid;
    grid-template-columns: 1fr 2fr;
    gap: 30px;
    margin-bottom: 30px;
}

.form-panel, .tasks-panel {
    background: white;
    padding: 30px;
    border-radius: 15px;
    box-shadow: 0 8px 32px rgba(0,0,0,0.1);
}

.form-group {
    margin-bottom: 20px;
}

.form-group label {
    font-weight: bold;
    display: block;
    margin-bottom: 8px;
}

.form-group input, .form-group textarea, .form-group select {
    width: 100%;
    padding: 12px;
    border: 2px solid #e0e0e0;
    border-radius: 8px;
    font-size: 1em;
}

.btn {
    padding: 12px 25px;
    border: none;
    border-radius: 50px;
    font-size: 1em;
    font-weight: bold;
    cursor: pointer;
    text-decoration: none;
    display: inline-block;
    margin: 5px;
}

.btn-primary {
    background: linear-gradient(135deg, #6f42c1 0%, #e83e8c 100%);
    color: white;
}

.btn-success { background: #28a745; color: white; }
.btn-warning { background: #ffc107; color: white; }
.btn-danger { background: #dc3545; color: white; }
.btn-secondary { background: #6c757d; color: white; }

.task-item {
    background: #f8f9fa;
    border-left: 5px solid #6f42c1;
    padding: 20px;
    margin-bottom: 15px;
    border-radius: 0 10px 10px 0;
}

.task-item.scaduto {
    border-left-color: #dc3545;
    background: #fff5f5;
}

.alert {
    padding: 15px;
    margin: 20px 0;
    border-radius: 8px;
    font-weight: bold;
}

.alert-success {
    background: #d4edda;
    color: #155724;
}

.alert-error {
    background: #f8d7da;
    color: #721c24;
}
</style>

<div class="task-header">
    <h2>ðŸŽ¯ Task Clienti</h2>
    <p>Gestisci task ricorrenti e one-shot per i tuoi clienti</p>
</div>

<?php if ($messaggio): ?>
    <div class="alert <?= strpos($messaggio, 'Errore') !== false ? 'alert-error' : 'alert-success' ?>">
        <?= htmlspecialchars($messaggio) ?>
    </div>
<?php endif; ?>

<div class="main-container">
    <div class="form-panel">
        <h3><?= $task ? 'Modifica Task' : 'Nuovo Task' ?></h3>
        
        <form method="POST">
            <?php if ($task): ?>
                <input type="hidden" name="task_id" value="<?= $task['id'] ?>">
            <?php endif; ?>
            
            <div class="form-group">
                <label for="cliente_id">Cliente *</label>
                <select name="cliente_id" id="cliente_id" required>
                    <option value="">Seleziona cliente...</option>
                    <?php foreach ($clienti as $cliente): ?>
                        <option value="<?= $cliente['id'] ?>" 
                                <?= ($task && $task['cliente_id'] == $cliente['id']) ? 'selected' : '' ?>>
                            <?= htmlspecialchars($cliente['Cognome/Ragione sociale'] . ' ' . ($cliente['Nome'] ?? '')) ?>
                            (<?= htmlspecialchars($cliente['Codice fiscale']) ?>)
                        </option>
                    <?php endforeach; ?>
                </select>
            </div>
            
            <div class="form-group">
                <label for="descrizione">Descrizione Task *</label>
                <textarea name="descrizione" id="descrizione" required><?= htmlspecialchars($task['descrizione'] ?? '') ?></textarea>
            </div>
            
            <div class="form-group">
                <label for="scadenza">Data Scadenza *</label>
                <input type="date" name="scadenza" id="scadenza" value="<?= htmlspecialchars($task['scadenza'] ?? '') ?>" required>
            </div>
            
            <div class="form-group">
                <label>
                    <input type="checkbox" id="is_ricorrente" onchange="toggleRicorrenza()">
                    Task ricorrente
                </label>
            </div>
            
            <div id="ricorrenza_fields" style="display: none;">
                <div class="form-group">
                    <label>Ripeti ogni</label>
                    <input type="number" name="ricorrenza" id="ricorrenza" min="1" placeholder="Numero">
                    <select name="tipo_ricorrenza" id="tipo_ricorrenza">
                        <option value="giorni">Giorni</option>
                        <option value="settimane">Settimane</option>
                        <option value="mesi">Mesi</option>
                        <option value="anni">Anni</option>
                    </select>
                </div>
            </div>
            
            <div class="form-group">
                <button type="submit" class="btn btn-primary">
                    <?= $task ? 'Salva Modifiche' : 'Crea Task' ?>
                </button>
                
                <?php if ($task): ?>
                    <a href="task_clienti.php" class="btn btn-secondary">Annulla</a>
                <?php endif; ?>
            </div>
        </form>
    </div>
    
    <div class="tasks-panel">
        <h3>Task Attivi (<?= count($tasks) ?>)</h3>
        
        <?php if (empty($tasks)): ?>
            <div style="text-align: center; padding: 40px; color: #666;">
                <h4>Nessun task presente</h4>
                <p>Crea il primo task per iniziare!</p>
            </div>
        <?php else: ?>
            <?php foreach ($tasks as $task_item): ?>
                <?php
                $is_scaduto = strtotime($task_item['scadenza']) < strtotime('today');
                $scadenza_formatted = date('d/m/Y', strtotime($task_item['scadenza']));
                ?>
                
                <div class="task-item <?= $is_scaduto ? 'scaduto' : '' ?>">
                    <h4><?= htmlspecialchars($task_item['descrizione']) ?></h4>
                    <p><strong>Cliente:</strong> <?= htmlspecialchars($task_item['nome_cliente']) ?></p>
                    <p><strong>Scadenza:</strong> <?= $scadenza_formatted ?> 
                        <?= $is_scaduto ? '<span style="color: #dc3545;">(Scaduto)</span>' : '' ?>
                    </p>
                    
                    <?php if (!empty($task_item['ricorrenza'])): ?>
                        <p><strong>Ricorrenza:</strong> Ogni <?= $task_item['ricorrenza'] ?> giorni</p>
                    <?php endif; ?>
                    
                    <div style="margin-top: 15px;">
                        <a href="?modifica=<?= $task_item['id'] ?>" class="btn btn-warning">Modifica</a>
                        <a href="?completa=<?= $task_item['id'] ?>" class="btn btn-success" 
                           onclick="return confirm('Confermi il completamento del task?')">Completa</a>
                        <a href="?elimina=<?= $task_item['id'] ?>" class="btn btn-danger" 
                           onclick="return confirm('Sei sicuro di voler eliminare questo task?')">Elimina</a>
                    </div>
                </div>
            <?php endforeach; ?>
        <?php endif; ?>
    </div>
</div>

<script>
function toggleRicorrenza() {
    const checkbox = document.getElementById('is_ricorrente');
    const fields = document.getElementById('ricorrenza_fields');
    const ricorrenzaInput = document.getElementById('ricorrenza');
    
    if (checkbox.checked) {
        fields.style.display = 'block';
        ricorrenzaInput.required = true;
    } else {
        fields.style.display = 'none';
        ricorrenzaInput.required = false;
        ricorrenzaInput.value = '';
    }
}

// Inizializzazione per modifica task
document.addEventListener('DOMContentLoaded', function() {
    const ricorrenza = <?= json_encode($task['ricorrenza'] ?? null) ?>;
    if (ricorrenza) {
        document.getElementById('is_ricorrente').checked = true;
        toggleRicorrenza();
        
        let valore = ricorrenza;
        let tipo = 'giorni';
        
        if (ricorrenza % 365 === 0) {
            valore = ricorrenza / 365;
            tipo = 'anni';
        } else if (ricorrenza % 30 === 0) {
            valore = ricorrenza / 30;
            tipo = 'mesi';
        } else if (ricorrenza % 7 === 0) {
            valore = ricorrenza / 7;
            tipo = 'settimane';
        }
        
        document.getElementById('ricorrenza').value = valore;
        document.getElementById('tipo_ricorrenza').value = tipo;
    }
});
</script>

</main>
</body>
</html>
